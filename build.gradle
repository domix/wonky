buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.5.0'
    classpath 'com.bertramlabs.plugins:coffee-asset-pipeline:2.0.7'

    classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.M3")
    classpath 'com.bluepapa32:gradle-watch-plugin:0.1.5'
    classpath "io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE"
    //classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
  }
}

plugins {
  id "com.github.hierynomus.license" version "0.11.0"
  id 'net.researchgate.release' version '2.2.0'
}

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'codenarc'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
//apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.bluepapa32.watch'
apply plugin: "io.spring.dependency-management"
apply plugin: 'com.bertramlabs.asset-pipeline'

ext {
  groovyVersion = '2.4.4'
  javaVersion = '1.8'
  spockVersion = '1.0-groovy-2.4'
}

sourceCompatibility = project.javaVersion
targetCompatibility = project.javaVersion

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
  compile "org.springframework.boot:spring-boot-starter-web"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-cache"
  compile 'com.domingosuarez.boot:spring-boot-starter-jade4j:0.3.0'
  compile 'com.github.groovy-wslite:groovy-wslite:1.1.2'

  compile 'org.webjars:webjars-locator:0.27'
  compile 'org.webjars:zeptojs:1.1.6'

  runtime 'net.sf.ehcache:ehcache'

  testCompile "org.spockframework:spock-core:${spockVersion}"
  testCompile "org.spockframework:spock-spring:${spockVersion}"
  testCompile "org.springframework:spring-test"
  testCompile "org.springframework.boot:spring-boot-starter-test"
  testCompile 'cglib:cglib-nodep:3.1'

  codenarc 'org.codenarc:CodeNarc:0.24'
  codenarc "org.codehaus.groovy:groovy-all:${groovyVersion}"
}

jacocoTestReport {
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
    html.enabled = true
  }
}

codenarc {
  configFile = file('./config/codenarc/codenarc.groovy')
}

codenarcTest {
  configFile = file('./config/codenarc/test.groovy')
}

watch {
  groovy {
    files files('src/main/groovy')
    tasks 'compileGroovy'
  }
}

assets {
  compileDir = 'build/resources/main/static/assets'
}

license {
  excludes(["**/*.yml", "**/*.jade", "**/*.svg", '**/*.txt', '**/*.css'])
  header rootProject.file('HEADER_LICENSE')
  strictCheck true
}

processResources.dependsOn assetCompile
classes.dependsOn licenseFormat
jacocoTestReport.dependsOn check
bootRepackage.dependsOn jacocoTestReport
